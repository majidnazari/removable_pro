
createPerson(input: CreatePersonInput! @spread): Person @guard(with: ["api"])  @throttle(maxAttempts:10 decayMinutes:1.0) @field(resolver: "App\\GraphQL\\Mutations\\Person\\CreatePerson@resolvePerson") 
    updatePerson(id: ID!, input: UpdatePersonInput! @spread): Person  @guard(with: ["api"]) @throttle(maxAttempts:10 decayMinutes:1.0) @field(resolver: "App\\GraphQL\\Mutations\\Person\\UpdatePerson@resolvePerson") 
    # deletePerson(input: DeletePersonInput! @spread ): Person  @guard(with: ["api"]) @throttle(maxAttempts:10 decayMinutes:1.0) @field(resolver: "App\\GraphQL\\Mutations\\Person\\DeletePerson@resolvePerson") 
    deletePersonRelation(personId: Int! ): Boolean  @guard(with: ["api"]) @throttle(maxAttempts:10 decayMinutes:1.0) @field(resolver: "App\\GraphQL\\Mutations\\Person\\DeletePersonRelation@resolvePersonRelation") 

     mergePersons(primaryPersonId: ID!, secondaryPersonId: ID!): Person  
     @guard(with: ["api"]) 
     @throttle(maxAttempts:10 decayMinutes:1.0) @field(resolver: "App\\GraphQL\\Mutations\\Person\\MergePersons@resolvemerge")
    @validator(class: "App\\GraphQL\\Validators\\Person\\MergePersonsValidator")



createParent(input: CreateParentInput! @spread): ParentResponse  @guard(with: ["api"]) 
@throttle(maxAttempts:10 decayMinutes:1.0) 
@field(resolver: "App\\GraphQL\\Mutations\\Person\\CreateParent@resolveParent") 

createSpouse(input: CreateSpouseInput! @spread): PersonMarriage  @guard(with: ["api"]) 
@throttle(maxAttempts:10 decayMinutes:1.0) 
@field(resolver: "App\\GraphQL\\Mutations\\Person\\CreateSpouse@resolveSpouse") 


createChild(input: CreateChildInput! @spread): Person @guard(with: ["api"]) 
@throttle(maxAttempts:10 decayMinutes:1.0) 
@field(resolver: "App\\GraphQL\\Mutations\\Person\\CreateChild@resolveChild") 