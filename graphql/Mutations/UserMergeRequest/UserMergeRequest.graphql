
    SendRequestToOtherFamily(input: SendRequestToOtherFamilyInput! @spread): UserMergeRequest 
    @guard(with: ["api"]) 
    @field(resolver: "App\\GraphQL\\Mutations\\UserMergeRequest\\SendRequestToOtherFamily@resolveUserMergeRequest") 


    UpdateRequestSender (id: ID!, input: UpdateRequestSenderInput! @spread): UserMergeRequest 
    @guard(with: ["api"]) 
    @field(resolver: "App\\GraphQL\\Mutations\\UserMergeRequest\\UpdateRequestSender@resolveUpdateRequestSender") 

    UpdateRequestReciver (id: ID!, input: UpdateRequestReciverInput! @spread): UserMergeRequest 
    @guard(with: ["api"]) 
    @field(resolver: "App\\GraphQL\\Mutations\\UserMergeRequest\\UpdateRequestReciver@resolveUpdateRequestReciver") 


    # sendFirstMergeRequest(input: SendRequestToOtherFamilyInput! @spread): UserMergeRequest 
    # @guard(with: ["api"]) 
    # @field(resolver: "App\\GraphQL\\Mutations\\UserMergeRequest\\sendFirstMergeRequest@resolvesendFirstMergeRequest") 


    # createUserMergeRequest(input: CreateUserMergeRequestInput! @spread): UserMergeRequest 
    # @guard(with: ["api"]) 
    # @field(resolver: "App\\GraphQL\\Mutations\\UserMergeRequest\\CreateUserMergeRequest@resolveUserMergeRequest") 

    # deleteUserMergeRequest(id: ID!): UserMergeRequest 
    # @guard(with: ["api"])
    #  @field(resolver: "App\\GraphQL\\Mutations\\UserMergeRequest\\DeleteUserMergeRequest@resolveUserMergeRequest") 


SendMergeRequestToOtherFamily(input: SendMergeRequestToOtherFamilyInput! @spread): UserMergeRequest 
    @guard(with: ["api"]) 
    @field(resolver: "App\\GraphQL\\Mutations\\UserMergeRequest\\SendMergeRequestToOtherFamily@resolveUserMergeRequest") 