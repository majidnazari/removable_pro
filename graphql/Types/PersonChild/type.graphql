
type PersonChild {
    id: ID!
    creator_id: ID!
    editor_id: ID
    person_marriage_id: ID
    child_id: ID
    child_kind: ChildKind
    child_status: ChildStatus
    status: Status
   

    creator: User
    editor: User
    PersonMarriage: PersonMarriage
    # WhoseChild: Person
}


input CreatePersonChildInput 
@validator(class: "App\\GraphQL\\Validators\\PersonChild\\CreatePersonChildInputValidator") 
@validator(class: "App\\GraphQL\\Validators\\Share\\UserOwnsRecordValidator")
 {

    person_marriage_id: ID
    child_id: ID
    child_kind: ChildKind
    child_status: ChildStatus
    #status: Status
   
}

input UpdatePersonChildInput 
 @validator(class: "App\\GraphQL\\Validators\\PersonChild\\UpdatePersonChildInputValidator") 
 @validator(class: "App\\GraphQL\\Validators\\Share\\UserOwnsRecordValidator")
 {

    person_marriage_id: ID
    child_id: ID
    child_kind: ChildKind
    child_status: ChildStatus
    status: Status
   
}

input DeletePersonChildInput 
@validator(class: "App\\GraphQL\\Validators\\PersonChild\\DeletePersonChildInputValidator")
@validator(class: "App\\GraphQL\\Validators\\Share\\UserOwnsRecordValidator")
{
    id: ID!
}

input DeletePersonChildByChildIdInput 
@validator(class: "App\\GraphQL\\Validators\\PersonChild\\DeletePersonChildByChildIdInputValidator")
@validator(class: "App\\GraphQL\\Validators\\Share\\UserOwnsRecordValidator")
{
    child_id: ID!
}