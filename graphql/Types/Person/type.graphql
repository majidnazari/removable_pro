


type Person {
    id: ID!
    creator_id: ID
    editor_id: ID
    node_code: String
    # node_level_x: Int
    # node_level_y: Int
    first_name: String!
    last_name: String!
    birth_date: String
    death_date: String
    mobile:String
    is_owner: Boolean
    gender: Int # the 1 is man and 0 is woman
    status: Status
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime

    Creator: User
    Editor: User
    # Children: [Person]
    PersonMarriages: [PersonMarriage]
    Addresses: [Address]
    Memories: [Memory]
    FamilyEvents: [FamilyEvent]
    Favorites: [Favorite]
    #scores: [Score]
}


input CreatePersonInput 
@validator(class: "App\\GraphQL\\Validators\\Person\\CreatePersonInputValidator") 
@validator(class: "App\\GraphQL\\Validators\\Share\\UserOwnsRecordValidator")
{

    # creator_id: ID
    # editor_id: ID
    # node_code: String
   
    first_name: String!
    last_name: String!
    birth_date: String!
    death_date: String
    mobile:String
    is_owner: Boolean
    gender: Int
    # status: Status
}

input UpdatePersonInput 
@validator(class: "App\\GraphQL\\Validators\\Person\\UpdatePersonInputValidator")
@validator(class: "App\\GraphQL\\Validators\\Share\\UserOwnsRecordValidator")
 {

    first_name: String
    last_name: String
    birth_date: String
    death_date: String
    mobile:String
    is_owner: Boolean
    gender: Int
    # status: Status
}

input DeletePersonInput 
@validator(class: "App\\GraphQL\\Validators\\Person\\DeletePersonValidator") 
@validator(class: "App\\GraphQL\\Validators\\Share\\UserOwnsRecordValidator")
{
    id: ID!
}


type AncestryTreeNode {
    person_id: ID
    first_name: String
    last_name: String
    father: AncestryNode
    mother: AncestryNode
}

type AncestryNode {
    id: ID
    name: String
    ancestry: AncestryTreeNode
}

type AncestryTree {
    mine: AncestryTreeNode
    related_node: AncestryTreeNode
    heads: [Head]
}

type AncestryTrees {
    mine: AncestryTreeNode
    related_nodes: [AncestryTreeNode]
    heads: [Head]
}

type Head {
  person_id: ID
  order: Int
  first_name: String
  last_name: String
}