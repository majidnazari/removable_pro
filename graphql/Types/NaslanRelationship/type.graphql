enum Status {
    Active
    Inactive
    None
}

enum NaslanDanamicRelationshipEnum {
    Father
    Mother
    Spouse
}

enum MarrageStatus {
    Related
    Notrelated
    Suspend
    None
}

enum SpouseStatus {
    Alive
    Dead
    Divorce
    Unkown
    None
}

type NaslanRelationship {
    id: ID!
    title: String!   
    priority:Int
    status: Status
    created_at: DateTime
    updated_at: DateTime

}

input CreateNaslanRelationshipInput {

    title: String!   
    priority:Int
    status: Status
}

input UpdateNaslanRelationshipInput {

    title: String!   
    priority:Int
    status: Status
}

type FirstSideSpouseSecondSide
{
    first_side_person_id: ID!
    relationship_id: ID!
    second_side_person_id: ID!
    marrage_status: MarrageStatus,
    spouse_status: SpouseStatus,
    marrage_date: String!
}

input CreateFirstSideSpouseSecondSideInput {

    first_side_person_id: ID!
    # first_side_person: Person
    relationship_id:NaslanDanamicRelationshipEnum
    # relationship: Realationship

    second_side_person_id: ID!
    # second_side_person_id: Person

    marrage_status: MarrageStatus,
    spouse_status: SpouseStatus,
    marrage_date: String!
}


type FirstSideChildSecondSide
{
    first_side_person_id: ID!
    relationship_id: ID!
    second_side_person_id: ID!
    marrage_status: MarrageStatus,
    spouse_status: SpouseStatus,
    marrage_date: String!
}

input CreateFirstSideChildSecondSideInput {

    first_side_person_id: ID!
    # first_side_person: Person
    relationship_id:NaslanDanamicRelationshipEnum
    # relationship: Realationship

    second_side_person_id: ID!
    # second_side_person_id: Person

    marrage_status: MarrageStatus,
    spouse_status: SpouseStatus,
    marrage_date: String!
}