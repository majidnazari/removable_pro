enum Status {
    Active
    Inactive
    None
}

enum NaslanDanamicRelationshipEnum {
    Father
    Mother
    Marriage
    Son
    Daughter
}

enum MarriageStatus {
    Related
    Notrelated
    Suspend
    Dead
    None
}

# enum MarriageStatus {
#     Alive
    
#     Divorce
#     Unkown
#     None
# }

enum ChildKind {
    Direct_child
    Mother_child
    Father_child
    Adoption
    None
}

enum ChildStatus {
    With_family
    Separated
    None
}

type NaslanRelationship {
    id: ID!
    title: String!   
    priority:Int
    status: Status
    created_at: DateTime
    updated_at: DateTime

}

input CreateNaslanRelationshipInput {

    title: String!   
    priority:Int
    status: Status
}

input UpdateNaslanRelationshipInput {

    title: String!   
    priority:Int
    status: Status
}

type FirstSideMarriageSecondSide
{
    first_side_person_id: ID!
    relationship_id: ID!
    second_side_person_id: ID!
    Marriage_status: MarriageStatus,
    marriage_date: String!
}

input CreateFirstSideMarriageSecondSideInput {

    first_side_person_id: ID!
    # first_side_person: Person
    relationship_id:NaslanDanamicRelationshipEnum
    # relationship: Realationship

    second_side_person_id: ID!
    # second_side_person_id: Person

    # : MarrageStatus,
    Marriage_status: MarriageStatus,
    marriage_date: String!
}


# type FirstSideChildSecondSide
# {
#     first_side_person_id: ID!
#     relationship_id: ID!
#     second_side_person_id: ID!
#     marrage_status: MarrageStatus,
#     Marriage_status: MarriageStatus,
#     marriage_date: String!
# }

input CreateMarriageChildInput {

    person_marriage_id: ID!
    relationship_type:NaslanDanamicRelationshipEnum
    child_id: ID!
    child_kind: ChildKind,
    child_status: ChildStatus,
    status: Status!
}